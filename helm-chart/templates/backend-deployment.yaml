apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: {{ .Values.backend.service.port | default 5000 }}
          env:
            - name: DB_HOST
              value: "mysql"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password
            - name: DB_NAME
              value: {{ .Values.mysql.database | default "cadastro_doadores" | quote }}
            - name: NODE_ENV
              value: "production"
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.probePath | default "/health" }}
              port: {{ .Values.backend.service.port | default 5000 }}
            initialDelaySeconds: {{ .Values.backend.livenessProbe.initialDelaySeconds | default 60 }}
            periodSeconds: {{ .Values.backend.livenessProbe.periodSeconds | default 20 }}
            failureThreshold: {{ .Values.backend.livenessProbe.failureThreshold | default 3 }}
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: {{ .Values.backend.probePath | default "/health" }}
              port: {{ .Values.backend.service.port | default 5000 }}
            initialDelaySeconds: {{ .Values.backend.readinessProbe.initialDelaySeconds | default 20 }}
            periodSeconds: {{ .Values.backend.readinessProbe.periodSeconds | default 10 }}
            failureThreshold: {{ .Values.backend.readinessProbe.failureThreshold | default 3 }}
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: {{ .Values.backend.probePath | default "/health" }}
              port: {{ .Values.backend.service.port | default 5000 }}
            failureThreshold: {{ .Values.backend.startupProbe.failureThreshold | default 30 }}
            periodSeconds: {{ .Values.backend.startupProbe.periodSeconds | default 10 }}
            timeoutSeconds: 5
          resources:
            {{- toYaml (.Values.backend.resources | default (dict "requests" (dict "cpu" "100m" "memory" "256Mi") "limits" (dict "cpu" "500m" "memory" "512Mi"))) | nindent 12 }}
          volumeMounts:
            - name: logs-volume
              mountPath: /app/logs
      volumes:
        - name: logs-volume
          emptyDir: {}